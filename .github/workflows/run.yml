name: Terraform Pre-Merge Validation

on:
  pull_request:
    branches:
      - '**'  # Trigger for all branches
  workflow_dispatch:

permissions:
  id-token: write
  contents: read  # Required for checkout

jobs:
  terraform-checks:
    name: Validate Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure full history is fetched for `git diff`

      - name: Debug Git History
        run: |
          echo "HEAD is at: $(git rev-parse HEAD)"
          echo "Changes compared to base branch:"
          git diff --name-only ${{ github.event.pull_request.base.sha }}

      - name: Determine Changed Directory
        id: detect_changes
        run: |
          # Detect the directory with changes
          CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }})

          echo "Changed files: $CHANGED_FILES"

          if echo "$CHANGED_FILES" | grep -q 'IAC/ca-central-1'; then
            echo "dir=IAC/ca-central-1" >> $GITHUB_ENV
            echo "role=arn:aws:iam::891377304437:role/Github-access" >> $GITHUB_ENV
          elif echo "$CHANGED_FILES" | grep -q 'IAC/dev'; then
            echo "dir=IAC/dev" >> $GITHUB_ENV
            echo "role=arn:aws:iam::257394485697:role/TerraformExecutionRole" >> $GITHUB_ENV
          else
            echo "No relevant changes detected."
            exit 1
          fi

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ env.role }}
          aws-region: ca-central-1

      - name: Verify AWS Identity
        run: aws sts get-caller-identity

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Debug Environment Variables
        run: |
          echo "Working Directory: ${{ env.dir }}"
          echo "Role to Assume: ${{ env.role }}"

      - name: Validate Terraform format
        run: terraform fmt -check
        working-directory: ${{ env.dir }}

      - name: Initialize Terraform
        run: terraform init
        working-directory: ${{ env.dir }}

      - name: Validate Terraform
        run: terraform validate
        working-directory: ${{ env.dir }}

      - name: Generate Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: ${{ env.dir }}
